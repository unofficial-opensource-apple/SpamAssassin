
=head1 NAME

spamc - client for spamd

=head1 SYNOPSIS

=over

=item spamc [options] < message

=back

=head1 DESCRIPTION

Spamc is the client half of the spamc/spamd pair.  It should be used in place
of C<spamassassin> in scripts to process mail.  It will read the mail from
STDIN, and spool it to its connection to spamd, then read the result back and
print it to STDOUT.  Spamc has extremely low overhead in loading, so it should
be much faster to load than the whole spamassassin program.

See the F<README> file in the F<spamd> directory of the SpamAssassin
distribution for more details.

=head1 OPTIONS

=over

=item B<-B>

Assume input is a single BSMTP-formatted message. In other words, spamc will
pull out everything between the DATA line and the lone-dot line to feed to
spamd, and will place the spamd output back in the same envelope (thus, any
SIZE extension in your BSMTP file will cause many problems).

=item B<-c>

Just check if the message is spam or not.  Set process exitcode to 1 if
message is spam, 0 if not spam or processing failure occurs.  Will print
score/threshold to stdout (as ints) or 0/0 if there was an error.
Combining B<-c> and B<-E> is a no-op, since B<-c> implies the behaviour
of B<-E>.

=item B<-d> I<host>

In TCP/IP mode, connect to spamd server on given host (default: localhost). 

If I<host> resolves to multiple addresses, then spamc will fail-over to the 
other addresses, if the first one cannot be connected to.

=item B<-e> I<command> I<[args]>

Instead of writing to stdout, pipe the output to I<command>'s standard input.
Note that there is a very slight chance mail will be lost here, because if the
fork-and-exec fails there's no place to put the mail message.

Note that this must be the LAST command line option, as everything after the
B<-e> is taken as arguments to the command (it's like I<rxvt> or I<xterm>).

This option is not supported on Win32 platforms.

=item B<-E>

Filter according to the other options, but set the process exitcode to 1 if
message is spam, 0 if not spam or processing failure occurs.

=item B<-h>

Print this help message and terminate without action.

=item B<-H>

For TCP/IP sockets, randomize the IP addresses returned from a DNS name
lookup (when more than one IP is returned). This provides for a kind of
hostname-base load balancing.

=item B<-l>

Send log messages to stderr, instead of to the syslog.

=item B<-p> I<port>

In TCP/IP mode, connect to spamd server listening on given port 
(default: 783).

=item B<-r>

Just output the SpamAssassin report text to stdout, if the message is
spam.  If the message is ham (non-spam), nothing will be printed.  The
first line of the output is the message score and the threshold, in
this format:

	score/threshold

=item B<-R>

Just output the SpamAssassin report text to stdout, for all messages.
See B<-r> for details of the output format used.

=item B<-s> I<max_size>

Set the maximum message size which will be sent to spamd -- any bigger than
this threshold and the message will be returned unprocessed (default: 250k).
If spamc gets handed a message bigger than this, it won't be passed to spamd.

The size is specified in bytes, and if you send it a negative number, things 
are quite likely to break very hard.

=item B<-S>

If spamc was built with support for SSL, encrypt data to and from the
spamd process with SSL; spamd must support SSL as well.

=item B<-t> I<timeout>

Set the timeout for spamc-to-spamd communications (default: 600, 0 disables).
If spamd takes longer than this many seconds to reply to a message, spamc 
will abort the connection and treat this as a failure to connect; in other 
words the message will be returned unprocessed.  

=item B<-u> I<username>

This argument has been semi-obsoleted.  To have spamd use per-user-config
files, run spamc as the user whose config files spamd should load.  If you're
running spamc as some other user, though, (eg. root, mail, nobody, cyrus, etc.)
then you can still use this flag.

=item B<-U> I<socketpath>

Connect to C<spamd> via UNIX domain socket I<socketpath> instead of a
TCP/IP connection.

This option is not supported on Win32 platforms.

=item B<-V>

Report the version of this C<spamc> client.  If built with SSL support,
an additional line will be included noting this, like so:

  SpamAssassin Client version 3.0.0-rc4
    compiled with SSL support (OpenSSL 0.9.7d 17 Mar 2004)

=item B<-x>

Don't use the 'safe fallback' error-recovery method, which passes through the
unaltered message if an error occurs.  Instead, exit with an error code, and
let the MTA queue up the mails for a retry later.  The exit codes used are
as follows:

    EX_USAGE        64  command line usage error
    EX_DATAERR      65  data format error       
    EX_NOINPUT      66  cannot open input
    EX_NOUSER       67  addressee unknown
    EX_NOHOST       68  host name unknown
    EX_UNAVAILABLE  69  service unavailable
    EX_SOFTWARE     70  internal software error
    EX_OSERR        71  system error (e.g., can't fork)
    EX_OSFILE       72  critical OS file missing
    EX_CANTCREAT    73  can't create (user) output file
    EX_IOERR        74  input/output error
    EX_TEMPFAIL     75  temp failure; user is invited to retry
    EX_PROTOCOL     76  remote error in protocol
    EX_NOPERM       77  permission denied
    EX_CONFIG       78  configuration error

=item B<-y>

Just output the names of the tests hit to stdout, on one line, separated
by commas.

=back

=head1 EXIT CODES

By default, spamc will exit with an exit code of C<0> unless there is an
unrecoverable error encountered during processing.

The B<-c> and B<-E> options modify this; instead, spamc will use an exit code
of C<1> if the message is determined to be spam.

If the C<-x> option is specified, 'safe fallback' will be disabled, and certain
error conditions related to communication between spamc and spamd will not
result in an error code.  Instead, the message will be passed through
unmodified and an exit code of C<0> will be returned.

=head1 SEE ALSO

spamd(1)
spamassassin(1)
Mail::SpamAssassin(3)

=head1 PREREQUISITES

C<Mail::SpamAssassin>

=head1 AUTHORS

The SpamAssassin(tm) Project <http://spamassassin.apache.org/>

=head1 COPYRIGHT

SpamAssassin is distributed under the Apache License, Version 2.0, as
described in the file C<LICENSE> included with the distribution.

=cut

